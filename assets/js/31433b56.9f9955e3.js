"use strict";(self.webpackChunkworkshop=self.webpackChunkworkshop||[]).push([[902],{88:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"develop/inventory/import-from-apim","title":"Import APIs from APIM","description":"If you have your APIs in Azure API Management, you can import them into your centralized API Inventory on API Center to improve discoverability and make them accessibile to all developers. You will also learn to set up automatic synchronization by linking your API Management instance to API Center and this will ensure that your inventory is always up-to-date.","source":"@site/docs/develop/inventory/import-from-apim.md","sourceDirName":"develop/inventory","slug":"/develop/inventory/import-from-apim","permalink":"/API-Center-Workshop/docs/develop/inventory/import-from-apim","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Environments and Deployments","permalink":"/API-Center-Workshop/docs/develop/inventory/env-and-deploys"},"next":{"title":"API Design Conformance","permalink":"/API-Center-Workshop/docs/develop/governance/api-design"}}');var o=i(4848),s=i(8453);const r={},a="Import APIs from APIM",c={},l=[{value:"Get more sample APIs",id:"get-more-sample-apis",level:2},{value:"Add APIs to Azure API Management",id:"add-apis-to-azure-api-management",level:2},{value:"Import from API Management",id:"import-from-api-management",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"import-apis-from-apim",children:"Import APIs from APIM"})}),"\n",(0,o.jsxs)(n.p,{children:["If you have your APIs in Azure API Management, you can import them into your centralized API Inventory on API Center to improve discoverability and make them accessibile to all developers. You will also learn to set up ",(0,o.jsx)(n.strong,{children:"automatic synchronization"})," by linking your API Management instance to API Center and this will ensure that your inventory is always up-to-date."]}),"\n",(0,o.jsx)(n.h2,{id:"get-more-sample-apis",children:"Get more sample APIs"}),"\n",(0,o.jsxs)(n.p,{children:["First, let's get some additional sample APIs to complete the exercise. We'll use APIs from ",(0,o.jsx)(n.a,{href:"https://apis.guru/",children:"APIs.guru"}),", but you can skip this step if you already have APIs you can use open in VS Code."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Fork the ",(0,o.jsx)(n.a,{href:"https://github.com/APIs-guru/openapi-directory/fork",children:"openapi-directory"})," repository into your github account."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Clone and open in VS Code."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Fork, clone and opena api-guru repo",src:i(7020).A+"",width:"1800",height:"774"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"The APIs directory should have more than 2000 APIs."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"add-apis-to-azure-api-management",children:"Add APIs to Azure API Management"}),"\n",(0,o.jsxs)(n.p,{children:["Create a new file in the root directory called ",(0,o.jsx)(n.code,{children:"script.sh"}),", and paste in the following bash script to automate the import of APIs from the APIs folder into an Azure API Management instance."]}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,o.jsxs)(n.p,{children:["Add your ",(0,o.jsx)(n.code,{children:"Subscription ID"}),", ",(0,o.jsx)(n.code,{children:"Resource group name"})," and ",(0,o.jsx)(n.code,{children:"resource name"})," values to their respective variables."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash# \nSet your variables\n\nsubscriptionId="<SUBSCRIPTION-ID>" \nresourceGroup="<RESOURCE-GROUP-NAME>"\nserviceName="<APIM-RESOURCE-NAME>"\n\n# Directory of the local clone of the openapi-directory repository\nbase_dir=$(pwd)\n\n# This is a comment\necho "Registering all the specs in the openapi-directory repository to API Management"\n\n# Check if already logged in\n\nif ! az account show > /dev/null 2>&1; then\n    az login\nfi\n\n# Set the subscription\naz account set --subscription $subscriptionId\n\n# Echo the currently set subscription\nsubscription=$(az account show --query "{subscriptionId:id, subscriptionName:name}")\necho "Currently set subscription: $subscription"\n\n# Find all .yaml files in the base directory and its subdirectories\nfor file in $(find $base_dir -type f -name "*.yaml"); do\n    # Echo the file name\n    echo "Importing file: $file"        \n    \n    # Remove the prefix up to APIs/    \n    ApiPath=${file#*APIs/}    \n    \n    # Replace all / with empty string    \n    ApiPath=${ApiPath//\\//}    \n    \n    # Replace . with empty string    \n    ApiPath=${ApiPath//./}    \n    echo  "API path: $ApiPath"  \n    \n    # This will output: adyencomAccountService4    \n    # Run the az command and echo its output    \n    output=$(az apim api import --path $ApiPath --resource-group $resourceGroup --service-name $serviceName --specification-path $file --specification-format OpenApi )    \n    echo $output    \n    \n    # Add a line break    \n    echo ""\ndone\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Open your terminal and run the script using ",(0,o.jsx)(n.code,{children:"bash script.sh"}),". Give it a few minutes to finish importing all the APIs."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Run bash script to import APIs to APIM",src:i(5980).A+"",width:"2518",height:"937"})}),"\n",(0,o.jsx)(n.p,{children:"When you open API Management, you will see all the imported APIs"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"APIs imported into APIM",src:i(9673).A+"",width:"1771",height:"1186"})}),"\n",(0,o.jsx)(n.h2,{id:"import-from-api-management",children:"Import from API Management"}),"\n",(0,o.jsx)(n.p,{children:"The process of synchronizing (linking) API Management to API Center completes the following actions:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"All your APIs in API Management will be added into API Center"}),"\n",(0,o.jsxs)(n.li,{children:["An environment will be created of type ",(0,o.jsx)(n.em,{children:"Azure API Management"})]}),"\n",(0,o.jsx)(n.li,{children:"A deployment will be created and associated for each API definition"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Run ",(0,o.jsx)(n.code,{children:'az apic update -n APIC-NAME -g RG-NAME --identity \'{"type": "SystemAssigned"}\''})," to enable managed identity in your API Center"]}),"\n",(0,o.jsxs)(n.li,{children:["Assign the API Management Service Reader role","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Get and save the principal ID using ",(0,o.jsx)(n.code,{children:'apicObjID=$(az apic show -n APIC-NAME -g RG-NAME --query "identity.principalId" --output tsv)'})]}),"\n",(0,o.jsxs)(n.li,{children:["Get and save the resource ID of the API Management instance using ",(0,o.jsx)(n.code,{children:'apimID=$(az apim show -n APIM-NAME -g RG-NAME --query "id" --output tsv)'})]}),"\n",(0,o.jsxs)(n.li,{children:["Assign the ",(0,o.jsx)(n.strong,{children:"API Management Service Reader role"})," to your managed identity using ",(0,o.jsx)(n.code,{children:'scope="${apimID:1}"'})," then ",(0,o.jsx)(n.code,{children:'az role assignment create --role "API Management Service Reader Role" --assignee-object-id $apicObjID --assignee-principal-type ServicePrincipal --scope $scope'})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Integrate API Management into API Center using ",(0,o.jsx)(n.code,{children:"az apic integration create apim -g RG-NAME -n APIC-NAME --integration-name INTEGRATION-NAME --azure-apim APIM-NAME"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Navigate to your ",(0,o.jsx)(n.code,{children:"Environments"})," on the Azure portal, and switch to ",(0,o.jsx)(n.code,{children:"Integrations (Preview)"})," to view your newly created link, and confirm the State is ",(0,o.jsx)(n.code,{children:"Linked and syncing"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"APIM linked to APIC",src:i(1740).A+"",width:"2474",height:"994"})}),"\n",(0,o.jsx)(n.p,{children:"Now, all APIs will be automatically imported into the inventory, and any updates on API Management will sync out of the box, ensuring all your APIs are accessible and up-to-date."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"APIs from the linked APIM",src:i(8390).A+"",width:"1869",height:"1334"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7020:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/api-guru-7e58ebb9e5f6e1eefa249362347e06b1.png"},1740:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/apim-apic-link-8a815d03d21544038b256745efc13a81.png"},9673:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/apim-apis-1cfbb0ed891492f6c04dc4024f719fd7.png"},8390:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/imported-apis-95c411ca23f02c80a3c65314896dfcfb.png"},5980:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/run-bash-30ff991818fbcbd9a51b648f65742eb3.png"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);